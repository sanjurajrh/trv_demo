---
- name: Disable ens4 on worker nodes
  hosts: utility
  remote_user: lab
  gather_facts: false
  module_defaults:
    group/k8s:
      host: "{{ ocp_cluster['host'] }}"
      kubeconfig: "{{ ocp_cluster['kubeconfig'] }}"
      validate_certs: "{{ ocp_cluster['validate_certs'] }}"

  tasks:
    - name: Determine if a NNCP exists in cluster
      shell: oc get nncp
      register: nncp
      ignore_errors: true

    - when: nncp.rc == 0
      block:
      - name: Delete disable-ens4-policy, if found
        shell: oc delete nncp disable-ens4-policy
        when: '"REASON\ndisable-ens4-policy" in nncp.stdout'
        ignore_errors: true

      - name: Retrieve node labels
        shell: oc get nodes {worker01,worker02} --show-labels | grep external
        register: node_labels
        ignore_errors: true

      - name: Apply temporary label to nodes
        shell: "oc label nodes {worker01,worker02} external-network=true --overwrite"
        when: '"external-network" not in node_labels.stdout'
        ignore_errors: true

      - name: Ensure that ens4 is not configured on nodes
        k8s:
          state: present
          inline:
            apiVersion: nmstate.io/v1
            kind: NodeNetworkConfigurationPolicy
            metadata:
              name: disable-ens4-policy
            spec:
              nodeSelector:
                external-network: "true"
              desiredState:
                interfaces:
                  - name: ens4
                    type: ethernet
                    state: down
                    mtu: 1500
                    ipv4:
                      address: []
                      enabled: false
                    ipv6:
                      address: []
                      enabled: false
                    lldp:
                      enabled: false
          wait: true
          wait_condition:
            type: Available
            status: "True"
            reason: SuccessfullyConfigured

      - name: Retrieve updated list of NNCPs in cluster
        shell: oc get nncp
        register: nncp_new
        ignore_errors: true

      - name: Remove temporary node labels
        shell: oc label nodes {worker01,worker02} external-network-
        when: '"REASON\ndisable-ens4-policy" in nncp_new.stdout'
        ignore_errors: true

      - name: Delete disable-ens4-policy resource
        shell: oc delete nncp disable-ens4-policy
        when: '"REASON\ndisable-ens4-policy" in nncp_new.stdout'
        ignore_errors: true
...
