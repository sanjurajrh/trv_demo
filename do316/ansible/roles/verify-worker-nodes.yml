---
- name: Verify worker node settings for lab review
  hosts: utility
  remote_user: lab
  gather_facts: False
  module_defaults:
    group/k8s:
      host: "{{ ocp_cluster['host'] }}"
      kubeconfig: "{{ ocp_cluster['kubeconfig'] }}"
      validate_certs: "{{ ocp_cluster['validate_certs'] }}"

  tasks:
    - name: Determine if a NNCP exists in cluster
      shell: oc get nncp
      register: nncp
      ignore_errors: yes

    - name: Delete br0-ens4-policy, if found
      shell: oc delete nncp br0-ens4-policy
      when: ("REASON\nbr0-ens4-policy" in nncp.stdout)
      ignore_errors: yes

    - name: Delete remove-br0-ens4-policy, if found
      shell: oc delete nncp remove-br0-ens4-policy
      when: ("REASON\nremove-br0-ens4-policy" in nncp.stdout)
      ignore_errors: yes

    - name: Check if "br0" exists in worker01 and worker02 network settings
      shell: oc describe nns {worker01,worker02} | grep br0
      register: nns_worker
      ignore_errors: yes

    - name: Retrieve node labels
      shell: oc get nodes {worker01,worker02} --show-labels | grep external
      register: node_labels
      ignore_errors: yes

    - name: Apply temporary label to nodes
      shell: oc label nodes {worker01,worker02} external-network=true --overwrite
      when: ("external-network" not in node_labels.stdout) and ("br0" in nns_worker.stdout)
      ignore_errors: yes

    - name: Ensure that the bridge is not configured on nodes
      k8s:
        state: present
        inline:
          apiVersion: nmstate.io/v1
          kind: NodeNetworkConfigurationPolicy
          metadata:
            name: remove-br0-ens4-policy
          spec:
            nodeSelector:
              external-network: "true"
            desiredState:
              interfaces:
                - name: br0
                  description: Linux bridge with ens4 as a port
                  type: linux-bridge
                  state: absent
                  ipv4:
                    dhcp: true
                    enabled: true
                  bridge:
                    options:
                      stp:
                        enabled: false
                      port:
                      - name: ens4
                - name: ens4
                  type: ethernet
                  state: up
                  mtu: 1500
                  ipv4:
                    auto-dns: true
                    auto-gateway: true
                    auto-route-table-id: 0
                    auto-routes: true
                    dhcp: true
                    enabled: true
                  ipv6:
                    auto-dns: true
                    auto-gateway: true
                    auto-route-table-id: 0
                    auto-routes: true
                    autoconf: true
                    dhcp: true
                    enabled: true
                  lldp:
                    enabled: false
        wait: yes
        wait_condition:
          type: Available
          status: "True"
          reason: SuccessfullyConfigured
      when: ("br0" in nns_worker.stdout)

    - name: Retrieve updated list of NNCPs in cluster
      shell: oc get nncp
      register: nncp_new
      ignore_errors: yes

    - name: Remove temporary node labels
      shell: oc label nodes {worker01,worker02} external-network-
      when: ("REASON\nremove-br0-ens4-policy" in nncp_new.stdout)
      ignore_errors: yes

    - name: Delete remove-br0-ens4 policy
      shell: oc delete nncp remove-br0-ens4-policy
      when: ("REASON\nremove-br0-ens4-policy" in nncp_new.stdout)
      ignore_errors: yes
